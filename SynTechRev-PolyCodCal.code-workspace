{
  "folders": [
    {
      "path": ".",
      "name": "SynTechRev-PolyCodCal"
    }
  ],
  "settings": {
    "python.defaultInterpreterPath": "${workspaceFolder}/.venv/bin/python",
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.testing.pytestArgs": [
      "tests",
      "-v"
    ],
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": false,
    "python.linting.flake8Enabled": false,
    "python.linting.mypyEnabled": true,
    "python.linting.mypyArgs": [
      "--config-file=mypy.ini"
    ],
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": [
      "--line-length=88"
    ],
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    },
    "files.exclude": {
      "**/__pycache__": true,
      "**/*.pyc": true,
      "**/*.pyo": true,
      "**/*.egg-info": true,
      ".pytest_cache": true
    },
    "files.watcherExclude": {
      "**/__pycache__/**": true,
      "**/.venv/**": true,
      "**/htmlcov/**": true
    },
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.diagnosticMode": "workspace",
    "python.analysis.autoImportCompletions": true,
    "python.analysis.extraPaths": [
      "${workspaceFolder}/src"
    ],
    "python.languageServer": "Pylance",
    "terminal.integrated.env.linux": {
      "PYTHONPATH": "${workspaceFolder}/src"
    },
    "terminal.integrated.env.osx": {
      "PYTHONPATH": "${workspaceFolder}/src"
    },
    "terminal.integrated.env.windows": {
      "PYTHONPATH": "${workspaceFolder}/src"
    },
    "[python]": {
      "editor.defaultFormatter": "ms-python.black-formatter",
      "editor.formatOnSave": true,
      "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
      },
      "editor.rulers": [88]
    },
    "coverage-gutters.coverageFileNames": [
      "coverage.xml",
      "htmlcov/index.html"
    ],
    "coverage-gutters.showLineCoverage": true,
    "coverage-gutters.showRulerCoverage": true,
    "git.ignoreLimitWarning": true,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "github.copilot.enable": {
      "*": true,
      "yaml": true,
      "plaintext": false,
      "markdown": true,
      "python": true
    },
    "github.copilot.advanced": {
      "debug.overrideEngine": "gpt-4",
      "debug.testOverrideProxyUrl": "",
      "debug.overrideProxyUrl": ""
    },
    "search.exclude": {
      "**/node_modules": true,
      "**/bower_components": true,
      "**/.venv": true,
      "**/htmlcov": true,
      "**/.pytest_cache": true,
      "**/__pycache__": true,
      "**/*.pyc": true
    }
  },
  "extensions": {
    "recommendations": [
      "ms-python.python",
      "ms-python.vscode-pylance",
      "ms-python.black-formatter",
      "charliermarsh.ruff",
      "matangover.mypy",
      "littlefoxteam.vscode-python-test-adapter",
      "ryanluker.vscode-coverage-gutters",
      "eamodio.gitlens",
      "streetsidesoftware.code-spell-checker",
      "visualstudioexptteam.vscodeintellicode",
      "github.vscode-pull-request-github",
      "github.copilot",
      "github.copilot-chat"
    ],
    "unwantedRecommendations": [
      "ms-python.pylint"
    ]
  },
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Python: Current File",
        "type": "python",
        "request": "launch",
        "program": "${file}",
        "console": "integratedTerminal",
        "justMyCode": true,
        "env": {
          "PYTHONPATH": "${workspaceFolder}/src"
        }
      },
      {
        "name": "Python: Debug Tests",
        "type": "python",
        "request": "launch",
        "module": "pytest",
        "args": [
          "-v",
          "${file}"
        ],
        "console": "integratedTerminal",
        "justMyCode": false,
        "env": {
          "PYTHONPATH": "${workspaceFolder}/src"
        }
      },
      {
        "name": "Python: Debug Single Test",
        "type": "python",
        "request": "launch",
        "module": "pytest",
        "args": [
          "-v",
          "${file}::${selectedText}"
        ],
        "console": "integratedTerminal",
        "justMyCode": false,
        "env": {
          "PYTHONPATH": "${workspaceFolder}/src"
        }
      },
      {
        "name": "Python: FeedbackMonitor CLI",
        "type": "python",
        "request": "launch",
        "program": "${workspaceFolder}/scripts/feedback_monitor.py",
        "console": "integratedTerminal",
        "args": [
          "--input",
          "${workspaceFolder}/examples/events.jsonl",
          "--window-size",
          "100",
          "--threshold",
          "0.2"
        ],
        "env": {
          "PYTHONPATH": "${workspaceFolder}/src"
        }
      },
      {
        "name": "Python: Run with Coverage",
        "type": "python",
        "request": "launch",
        "module": "pytest",
        "args": [
          "--cov=src/syntechrev_polycodcal",
          "--cov-report=html",
          "--cov-report=term-missing",
          "-v"
        ],
        "console": "integratedTerminal",
        "justMyCode": false,
        "env": {
          "PYTHONPATH": "${workspaceFolder}/src"
        }
      }
    ]
  },
  "tasks": {
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Run Tests",
        "type": "shell",
        "command": "${config:python.defaultInterpreterPath}",
        "args": [
          "-m",
          "pytest",
          "-v"
        ],
        "group": {
          "kind": "test",
          "isDefault": true
        },
        "presentation": {
          "reveal": "always",
          "panel": "new"
        },
        "problemMatcher": []
      },
      {
        "label": "Run Tests with Coverage",
        "type": "shell",
        "command": "${config:python.defaultInterpreterPath}",
        "args": [
          "-m",
          "pytest",
          "--cov=src/syntechrev_polycodcal",
          "--cov-report=html",
          "--cov-report=term-missing",
          "-v"
        ],
        "group": "test",
        "presentation": {
          "reveal": "always",
          "panel": "new"
        },
        "problemMatcher": []
      },
      {
        "label": "Format Code (Black)",
        "type": "shell",
        "command": "${config:python.defaultInterpreterPath}",
        "args": [
          "-m",
          "black",
          "src",
          "tests",
          "scripts"
        ],
        "group": "none",
        "presentation": {
          "reveal": "always",
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Lint (Ruff)",
        "type": "shell",
        "command": "${config:python.defaultInterpreterPath}",
        "args": [
          "-m",
          "ruff",
          "check",
          "."
        ],
        "group": "none",
        "presentation": {
          "reveal": "always",
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Type Check (mypy)",
        "type": "shell",
        "command": "${config:python.defaultInterpreterPath}",
        "args": [
          "-m",
          "mypy",
          "src"
        ],
        "group": "none",
        "presentation": {
          "reveal": "always",
          "panel": "shared"
        },
        "problemMatcher": []
      },
      {
        "label": "Run All Quality Checks",
        "dependsOn": [
          "Format Code (Black)",
          "Lint (Ruff)",
          "Type Check (mypy)",
          "Run Tests"
        ],
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "presentation": {
          "reveal": "always",
          "panel": "new"
        },
        "problemMatcher": []
      },
      {
        "label": "Pre-commit (All Files)",
        "type": "shell",
        "command": "${config:python.defaultInterpreterPath}",
        "args": [
          "-m",
          "pre_commit",
          "run",
          "--all-files"
        ],
        "group": "none",
        "presentation": {
          "reveal": "always",
          "panel": "new"
        },
        "problemMatcher": []
      }
    ]
  }
}
