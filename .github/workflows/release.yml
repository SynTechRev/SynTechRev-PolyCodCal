name: Release

on:
  push:
    tags:
      - 'v*'

env:
  TAG_NAME: ${{ github.ref_name }}
  TAG_VERSION: ${{ github.ref_name == '' && '' || (github.ref_name.startsWith('v') ? github.ref_name.substring(1) : github.ref_name) }}

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (fetch tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify version matches tag
        id: version-check
        run: |
          python - <<'PY'
          import tomllib,sys
          data = tomllib.loads(open('pyproject.toml','rb').read())
          pkg_version = data['project']['version']
          tag = "${{ github.ref_name }}"
          tag_ver = tag[1:] if tag.startswith('v') else tag
          print("pyproject version:", pkg_version)
          print("tag version:", tag_ver)
          if pkg_version != tag_ver:
              print("ERROR: Version mismatch between pyproject.toml and tag")
              sys.exit(1)
          print("Version guard OK")
          PY

      - name: Clean previous build artifacts
        run: rm -rf dist build *.egg-info || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Build sdist and wheel
        run: |
          python -m pip install --upgrade build
          python -m build --no-isolation

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m pip install --upgrade twine
          if [ -z "${TWINE_PASSWORD:-}" ]; then
            echo "Skipping TestPyPI publish: TEST_PYPI_API_TOKEN not set"
            exit 0
          fi
          python -m twine upload --repository-url https://test.pypi.org/legacy/ \
            --skip-existing --verbose -u "${TWINE_USERNAME}" -p "${TWINE_PASSWORD}" dist/*

  post-publish-verify:
    needs: build-and-publish
    runs-on: ubuntu-latest
    env:
      TAG_VERSION: ${{ github.ref_name == '' && '' || (github.ref_name.startsWith('v') ? github.ref_name.substring(1) : github.ref_name) }}
    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Create venv and upgrade pip
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip

      - name: Install package from TestPyPI
        run: |
          source venv/bin/activate
          pip install --index-url https://test.pypi.org/simple/ \
              --extra-index-url https://pypi.org/simple/ \
              syntechrev-polycodcal==${{ env.TAG_VERSION }}

      - name: Import smoke test
        run: |
          source venv/bin/activate
          python - <<'PY'
          try:
              import syntechrev_polycodcal
              print("import OK")
          except Exception as e:
              print("Import failed:", e)
              raise
          PY

      - name: CLI sanity check
        run: |
          source venv/bin/activate
          syntech-monitor --help
